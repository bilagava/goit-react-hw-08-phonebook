{"version":3,"file":"static/js/348.5d233614.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://react-homework-template/./src/components/ContactList/ContactsItem/ContactsItem.module.css?9af8","components/ContactList/ContactsItem/ContactsItem.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactsList.jsx","components/ContactForm/ContactForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactForm_box__4-sSd\",\"title\":\"ContactForm_title__jZguf\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactsItem_button__WYfJv\",\"item\":\"ContactsItem_item__QdM1f\"};","import Button from 'react-bootstrap/Button';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsOperations';\nimport styles from './ContactsItem.module.css';\nimport { LoaderDelete } from '../../Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { useEffect } from 'react';\n\nexport const ContactsItem = ({ name, id, phone }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.isLoading);\n\n  useEffect(() => {\n    return () => {\n      if (isLoading === id) {\n        Notiflix.Notify.failure(\n          `You have removed ${name} contact from your list`\n        );\n      }\n    };\n  }, [id, isLoading, name]);\n\n  return (\n    <li className={styles.item}>\n      {name} : {phone}\n      <Button\n        variant=\"danger\"\n        className={styles.button}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n        {isLoading === id && <LoaderDelete />}\n      </Button>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\",\"filterBox\":\"Filter_filterBox__A-UPt\"};","import React from 'react';\nimport styles from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filter } from '../../redux/contactsActions';\n\nconst Filter = () => {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.filterBox}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          onChange={e => dispatch(filter(e.currentTarget.value))}\n          value={value}\n          type=\"text\"\n        />\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"titleContacts\":\"ContactList_titleContacts__ywyA6\",\"contactsBox\":\"ContactList_contactsBox__H9Ugp\",\"contactsList\":\"ContactList_contactsList__7leRd\",\"text\":\"ContactList_text__+NWAW\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contactsOperations';\nimport { useEffect } from 'react';\nimport { ContactsItem } from './ContactsItem/ContactsItem';\nimport { Loader } from 'components/Loader/Loader';\nimport Filter from 'components/Filter/Filter';\nimport styles from './ContactList.module.css';\n\nconst ContactsList = () => {\n  const contacts = useSelector(state => state.entities);\n  const isLoading = useSelector(state => state.isLoading);\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.filter);\n\n  const searchName = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.contactsBox}>\n      <h2 className={styles.titleContacts}>Contacts</h2>\n      <Filter />\n      {contacts.length > 0 ? (\n        <ul className={styles.contactsList}>\n          {searchName().map(({ name, id, number }) => (\n            <ContactsItem name={name} key={id} id={id} number={number} />\n          ))}\n          {isLoading === 'fetch' && <Loader />}\n        </ul>\n      ) : (\n        !isLoading && (\n          <p className={styles.text}>You don't have saved contacts yet</p>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import Button from 'react-bootstrap/Button';\nimport Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { addContact } from 'redux/contactsOperations';\nimport { LoaderAdd } from 'components/Loader/Loader';\nimport { setIsLoading } from 'redux/contactsActions';\nimport ContactsList from '../ContactList/ContactsList';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactsValue = useSelector(state => state.entities);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.isLoading);\n\n  useEffect(() => {\n    if (isLoading === 'addSuccess') {\n      Notiflix.Notify.success(\n        `You have added the contact ${name}, to your list`\n      );\n      dispatch(setIsLoading());\n    }\n  }, [dispatch, isLoading, name]);\n\n  const handleNumberChange = e => {\n    const currentTarget = e.currentTarget.name;\n    const value = e.currentTarget.value;\n    if (currentTarget === 'name') {\n      setName(value);\n    }\n    if (currentTarget === 'number') {\n      setNumber(value);\n    }\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const nameValue = contactsValue.map(value => value.name.toLowerCase());\n\n    if (nameValue.includes(name.toLowerCase())) {\n      Notiflix.Notify.warning(`${name} is alredy in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.box}>\n        <h1 className={styles.title}>Phoneboock</h1>\n        <form onSubmit={handleFormSubmit} className={styles.form}>\n          <div className={styles.formBox}>\n            <label className={styles.label}>\n              Name\n              <input\n                value={name}\n                onChange={handleNumberChange}\n                className={styles.input}\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n            </label>\n            <label className={styles.label}>\n              Phone number\n              <input\n                value={number}\n                onChange={handleNumberChange}\n                className={styles.input}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n            </label>\n\n            <Button\n              className={styles.btn}\n              variant=\"primary\"\n              size=\"sm\"\n              type=\"submit\"\n            >\n              Add Contact{isLoading === 'add' && <LoaderAdd />}\n            </Button>\n          </div>\n        </form>\n      </div>\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactForm;\n"],"names":["ContactsItem","name","id","phone","dispatch","useDispatch","isLoading","useSelector","state","useEffect","Notiflix","className","styles","Button","variant","onClick","deleteContact","Loader","value","filter","onChange","e","currentTarget","type","contacts","entities","fetchContacts","length","contact","toLowerCase","includes","map","number","useState","setName","setNumber","contactsValue","setIsLoading","handleNumberChange","onSubmit","preventDefault","addContact","pattern","title","required","size"],"sourceRoot":""}